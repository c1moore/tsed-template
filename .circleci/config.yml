version: 2.1

references:
  container_config: &container_config
    docker:
      - image: cimg/node:lts
  restore_dep_cache: &restore_dep_cache
    restore_cache:
      keys:
        - v2-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Branch }}-{{ checksum "package.json" }}

  filter_any: &filter_any
    filters:
      tags:
        only: /.*/
  filter_tags: &filter_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\d+\.\d+\.\d+.*$/
  filter_prod_tags: &filter_prod_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\d+\.\d+\.\d+$/
  filter_nonprod_infra_tags: &filter_nonprod_infra_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^infra-v\d+\.\d+\.\d+-.+$/
  filter_prod_infra_tags: &filter_prod_infra_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^infra-v\d+\.\d+\.\d+$/

  matches_non_prod_release: &matches_non_prod_release
    pattern: "^v\\d+\\.\\d+\\.\\d+.*$"
    value: << pipeline.git.tag >>
  matches_prod_release: &matches_prod_release
    pattern: "^v\\d+\\.\\d+\\.\\d+$"
    value: << pipeline.git.tag >>
  matches_non_prod_infra_release: &matches_non_prod_infra_release
    pattern: "^infra-v\\d+\\.\\d+\\.\\d+-.+$"
    value: << pipeline.git.tag >>
  matches_prod_infra_release: &matches_prod_infra_release
    pattern: "^infra-v\\d+\\.\\d+\\.\\d+$"
    value: << pipeline.git.tag >>

  dependencies_job: &dependencies_job
    <<: *filter_any
  lint_job: &lint_job
    requires:
      - dependencies
    <<: *filter_any
  test_job: &test_job
    requires:
      - dependencies
    <<: *filter_any
  build_job: &build_job
    requires:
      - lint
      - test
    <<: *filter_any

commands:
  publish:
    description: "Publish the server to where ever it needs to go."
    parameters:
      env:
        type: string
    steps:
      - run:
          name: "Todo"
          command: echo "Update this to fit where you deploy your image."

orbs:
  pulumi: pulumi/pulumi@2.0.0

jobs:
  dependencies:
    <<: *container_config
    steps:
      - checkout
      - *restore_dep_cache
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: v2-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  lint:
    <<: *container_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: npm run lint
  test:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install node
          command: |
            nvm install 16
            nvm use 16
            nvm alias default 16
      - run:
          name: Setup Environment
          command: cp template.env .env
      - run:
          name: Setup LocalStack
          command: npm run up
      - run:
          name: Create Deployment Package
          command: npm run build:localstack
      - run:
          name: Test
          command: npm test
  build:
    <<: *container_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: npm run build
      - run:
          name: Prune
          command: npm prune --production
      - run:
          name: Compress
          command: |
            PACKAGE_NAME=${CIRCLE_TAG:-$CIRCLE_SHA1}
            zip -r $PACKAGE_NAME.zip ./dist ./node_modules ./*.js
      - persist_to_workspace:
          root: .
          paths:
            - ./*.zip
  publish:
    <<: *container_config
    parameters:
      env:
        type: string
    steps:
      - attach_workspace:
          at: .
      - pulumi/login
      - publish:
          env: << parameters.env >>
  deploy:
    <<: *container_config
    parameters:
      env:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Todo
          command: echo "Update to deploy."
  deploy-infrastructure:
    <<: *container_config
    parameters:
      stack:
        type: string
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd ./infrastructure
            npm install
      - pulumi/login
      - pulumi/update:
          stack: << parameters.stack >>
          working_directory: ./infrastructure

workflows:
  version: 2
  default:
    when:
      and:
        - not:
            matches:
              <<: *matches_non_prod_release
        - not:
            matches:
              <<: *matches_prod_release
        - not:
            matches:
              <<: *matches_non_prod_infra_release
        - not:
            matches:
              <<: *matches_prod_infra_release
    jobs:
      - dependencies:
          <<: *dependencies_job
      - lint:
          <<: *lint_job
      - test:
          <<: *test_job
      - build:
          <<: *build_job
  non_prod_release:
    when:
      matches:
        <<: *matches_non_prod_release
    jobs:
      - dependencies:
          <<: *dependencies_job
      - lint:
          <<: *lint_job
      - test:
          <<: *test_job
      - build:
          <<: *build_job
      - publish:
          requires:
            - build
          context: aws-dev
          env: dev
          <<: *filter_tags
      - deploy:
          requires:
            - publish
          context: aws-dev
          env: dev
          <<: *filter_tags
  prod_release:
    when:
      matches:
        <<: *matches_prod_release
    jobs:
      - dependencies:
          <<: *dependencies_job
      - lint:
          <<: *lint_job
      - test:
          <<: *test_job
      - build:
          <<: *build_job
      - publish:
          requires:
            - build
          context:
            - aws-prod
          env: prod
          <<: *filter_prod_tags
      - deploy:
          requires:
            - publish
          context: aws-prod
          env: prod
          <<: *filter_tags
  deploy_non_prod_infra:
    when:
      matches:
        <<: *matches_non_prod_infra_release
    jobs:
      - deploy-infrastructure:
          context:
            - pulumi-dev
          stack: dev
          <<: *filter_nonprod_infra_tags
  deploy_prod_infra:
    when:
      matches:
        <<: *matches_prod_infra_release
    jobs:
      - deploy-infrastructure:
          context:
            - pulumi-prod
          stack: prod
          <<: *filter_prod_infra_tags